apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "redis.fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  strategy:
      type: "RollingUpdate"
      rollingUpdate:
        maxSurge: 300%
        maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      service: {{ template "redis.name" . }}
  template:
    metadata:
      annotations:
        {{ if .Values.metrics.enabled }}
        prometheus.io.scrape: "true"
        prometheus.io.port: "9121"
        {{ end }}
      labels:
        service: {{ template "redis.name" . }}
    spec:
      initContainers:
      - image: "alpine"
        name: "increase-somaxconn"
        securityContext:
          privileged: true
        command:
        - "/bin/sh"
        - "-c"
        - "sysctl -w net.core.somaxconn=4096"
      - name: "disable-thp"
        image: "alpine"
        volumeMounts:
          - name: "host-sys"
            mountPath: "/host-sys"
        securityContext:
          privileged: true
        command:
          - "sh"
          - "-c"
          - "echo madvise >/host-sys/kernel/mm/transparent_hugepage/enabled && echo madvise >/host-sys/kernel/mm/transparent_hugepage/defrag"
      containers:
        - name: "redis"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          image: "redis:4-alpine"
          {{ if .Values.args }}
          args:
{{ toYaml .Values.args | indent 12 }}
          {{ end }}
          ports:
          - containerPort: 6379
            protocol: TCP
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
        {{ if .Values.metrics.enabled }}
        # Exporter suggested from prometheus docs: https://prometheus.io/docs/instrumenting/exporters/
        # Prometheus, in weave-cloud, will discover this via polling the service which is created below.
        - name: "redis-exporter"
          image: "oliver006/redis_exporter:v0.14"
          ports:
          - containerPort: 9121
          resources:
{{ toYaml .Values.metrics.resources | indent 12 }}
        {{ end }}
      # Create an emptyDir volume for persistence through container crashes
      # Until the need arises to do further persistence, will allow some possibility for cache resets
      volumes:
        - name: "host-sys"
          hostPath:
            path: "/sys"
        - name: data
          emptyDir: {}
